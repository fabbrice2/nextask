openapi: 3.0.0
info:
  title: API de Gestion des Utilisateurs et Tâches
  description: API pour gérer les utilisateurs et les tâches, avec authentification JWT.
  version: 1.0.0
servers:
  - url: http://localhost:3001

paths:
  /register:
    post:
      summary: Inscription d'un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        201:
          description: Inscription réussie
        400:
          description: Email déjà utilisé
        500:
          description: Erreur de serveur

  /login:
    post:
      summary: Connexion d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        200:
          description: Connexion réussie, retourne le token JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  email:
                    type: string
                  message:
                    type: string
                    example: "Connexion réussie !"
        401:
          description: Email ou mot de passe incorrect
        500:
          description: Erreur de serveur

  /tasks:
    get:
      summary: Récupérer toutes les tâches
      responses:
        200:
          description: Liste des tâches
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    body:
                      type: string
                    user_id:
                      type: integer
                    status:
                      type: string
                    created_at:
                      type: string
                      format: date-time
        500:
          description: Erreur de serveur

    post:
      summary: Ajouter une nouvelle tâche
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Acheter du lait"
                body:
                  type: string
                  example: "N'oubliez pas d'acheter du lait au magasin."
                user_id:
                  type: integer
                  example: 1
                status:
                  type: string
                  example: "pending"
      responses:
        201:
          description: Tâche ajoutée avec succès
        500:
          description: Erreur lors de l'ajout de la tâche

  /tasks/{id}:
    put:
      summary: Mettre à jour le statut d'une tâche
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la tâche à mettre à jour
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "completed"
      responses:
        200:
          description: Tâche mise à jour avec succès
        500:
          description: Erreur lors de la mise à jour de la tâche

    delete:
      summary: Supprimer une tâche
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la tâche à supprimer
      responses:
        200:
          description: Tâche supprimée avec succès
        500:
          description: Erreur lors de la suppression de la tâche

  /protected:
    get:
      summary: Route protégée nécessitant un token JWT
      security:
        - bearerAuth: []
      responses:
        200:
          description: Accès autorisé
        401:
          description: Accès refusé
        403:
          description: Token invalide

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Task:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        user_id:
          type: integer
        status:
          type: string
